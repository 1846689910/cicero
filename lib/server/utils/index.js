"use strict";const Fs=require("fs");const Path=require("path");function getAllPaths(path,options){const{needPath:needPath,pathType:pathType,level:level}=Object.assign({needPath:true,pathType:0,level:-2},options);const paths={files:[],dirs:[]};_getAllPathsHelper(path,paths,level,needPath,pathType);return paths}function _getAllPathsHelper(path,paths,level,needPath,pathType){if(level<0&&level!==-2){if(Fs.lstatSync(path).isFile()&&(pathType===0||pathType===2)){paths.files.push(needPath?path:Path.basename(path))}return}const subs=Fs.readdirSync(path,{withFileTypes:true});const subdirs=subs.filter(x=>x.isDirectory());const subfiles=subs.filter(x=>x.isFile());if(pathType===0||pathType===2)paths.files.push(...subfiles.map(x=>needPath?Path.join(path,x.name):x.name));if(pathType===1||pathType===2)paths.dirs.push(...subdirs.map(x=>needPath?Path.join(path,x.name):x.name));for(const sub of subdirs){_getAllPathsHelper(Path.join(path,sub.name),paths,level===-2?level:level-1,needPath,pathType)}}module.exports={getAllPaths:getAllPaths};